name: Android Build Release Workflow

on:
  push:
    #branches: [ dev ]
    tags:
      - '*'


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: gradle/actions/wrapper-validation@v3

      - name: create and checkout branch
        # push events already checked out the branch
        if: github.event_name == 'pull_request'
        run: git checkout -B ${{ github.head_ref }}

      #- name: restoreReleaseKeystore
      #  run: |
      #      echo  "${{ secrets.RELEASE_KEYSTORE }}" -d -o release.keystore release.keystore.asc
      #      gpg --batch --passphrase "${{ secrets.RELEASE_KEYSTORE_GPG }}" -d -o release.keystore release.keystore.asc

      - name: generate ChangeLog
        run: |
          git show --no-patch HEAD  --format='%B' > customChangeLogFile
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: "temurin"

      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build
        run: ./gradlew assembleRelease

      - name: Setup build tool version variable
        shell: bash
        run: |
          BUILD_TOOL_VERSION=$(ls /usr/local/lib/android/sdk/build-tools/ | tail -n 1)
          echo "BUILD_TOOL_VERSION=$BUILD_TOOL_VERSION" >> $GITHUB_ENV
          echo Last build tool version is: $BUILD_TOOL_VERSION

      - name: Sign app APK
        uses: r0adkll/sign-android-release@v1
        # ID used to access action output
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.RELEASE_KEYSTORE }}
          alias: ${{ secrets.RELEASE_ALIAS }}
          keyStorePassword: ${{ secrets.RELEASE_KEYSTORE_PASS }}
          #keyPassword: ${{ secrets.RELEASE_KEYSTORE_PASS }}
        env:
          BUILD_TOOLS_VERSION: ${{ env.BUILD_TOOL_VERSION }}

      - name: Upload app artifact APK
        uses: actions/upload-artifact@v3
        with:
          name: app
          path: ${{steps.sign_app.outputs.signedReleaseFile}}
          #path: app/build/outputs/apk/release/*.apk


      # evermind: How to get just the tag name? -> https://github.community/t/how-to-get-just-the-tag-name/16241/11
      - name: Branch name
        id: branch_name
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
      # evermind
      - name: rename apk and create checksum
        id: renamed_apk
        env:
          SOURCE_NAME: ${{ steps.branch_name.outputs.SOURCE_NAME }}
          SOURCE_BRANCH: ${{ steps.branch_name.outputs.SOURCE_BRANCH }}
          SOURCE_TAG: ${{ steps.branch_name.outputs.SOURCE_TAG }}
          SIGNED_APK: ${{ steps.sign_app.outputs.signedReleaseFile }}
          SIGNED_APK_CONSCRYPT: ${{ steps.sign_app_conscrypt.outputs.signedReleaseFile }}
          SIGNED_APK_LEGACY: ${{ steps.sign_app_legacy.outputs.signedReleaseFile }}
        run: |
          echo ::set-output name=RENAMED_APK::${SIGNED_APK%/*}/BookWorm_${SOURCE_TAG}.apk
          cp ${SIGNED_APK} ${SIGNED_APK%/*}/BookWorm_${SOURCE_TAG}.apk
          cd ${SIGNED_APK%/*}
          sha256sum BookWorm_${SOURCE_TAG}.apk > BookWorm_${SOURCE_TAG}.apk.sha256
          cd -
      # evermind: how to autorelease?: https://github.com/marvinpinto/action-automatic-releases
      - name: auto release
        uses: "evermind-zz/action-automatic-releases@v1.2.1-evrmd"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          changelog_file: "customChangeLogFile"
          files: |
            ${{ steps.renamed_apk.outputs.RENAMED_APK }}
            ${{ steps.renamed_apk.outputs.RENAMED_APK }}.sha256
        id: "automatic_releases"
